import tensorflow as tf
from tensorflow.python.keras.applications.efficientnet import EfficientNetB4
import tensorflow.keras as keras
from tensorflow.python.keras.utils.vis_utils import plot_model
class MainModel:
    def __init__(self, lr=1e-5):
        self.lr = lr
        self.base_model_mels = EfficientNetB4(include_top=False, weights="imagenet", input_shape=(75, 128, 3))
        self.mels_intermediate = tf.keras.models.Model(inputs=self.base_model_mels.input, outputs=self.base_model_mels.get_layer("block4f_add").output)
        self.base_model_mfcc = EfficientNetB4(include_top=False, weights="imagenet", input_shape=(75, 128, 3))
        self.mfcc_intermediate = tf.keras.models.Model(inputs=self.base_model_mfcc.input, outputs=self.base_model_mfcc.get_layer("block4f_add").output)
        self.base_concat_model = EfficientNetB4(include_top=False, weights="imagenet")
        # print(self.base_model_mels.summary())
        # plot_model(self.base_model_mels, to_file="efficientnet4_plot.png", show_shapes=True, show_layer_names=True)


    def build_model(self):

        mels_input = keras.Input(shape=(75, 128, 3))
        mfcc_input = keras.Input(shape=(75, 128, 3))

        x = self.mels_intermediate(mels_input)
        y = self.mfcc_intermediate(mfcc_input)
        concat = tf.keras.layers.Add()([x, y])
        concat = self.base_concat_model.get_layer("block5a_expand_conv")(concat)
        concat = self.base_concat_model.get_layer("block5a_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block5a_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block5a_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block5a_bn")(concat)
        block5a_activation = self.base_concat_model.get_layer("block5a_activation")(concat)
        concat = self.base_concat_model.get_layer("block5a_se_squeeze")(block5a_activation)
        concat = self.base_concat_model.get_layer("block5a_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block5a_se_reduce")(concat)
        block5a_se_expand = self.base_concat_model.get_layer("block5a_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block5a_se_excite")([block5a_activation, block5a_se_expand])
        concat = self.base_concat_model.get_layer("block5a_project_conv")(concat)
        block5a_project_bn = self.base_concat_model.get_layer("block5a_project_bn")(concat)

        concat = self.base_concat_model.get_layer("block5b_expand_conv")(block5a_project_bn)
        concat = self.base_concat_model.get_layer("block5b_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block5b_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block5b_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block5b_bn")(concat)
        block5b_activation = self.base_concat_model.get_layer("block5b_activation")(concat)
        concat = self.base_concat_model.get_layer("block5b_se_squeeze")(block5b_activation)
        concat = self.base_concat_model.get_layer("block5b_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block5b_se_reduce")(concat)
        block5b_se_expand = self.base_concat_model.get_layer("block5b_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block5b_se_excite")([block5b_activation, block5b_se_expand])
        concat = self.base_concat_model.get_layer("block5b_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block5b_project_bn")(concat)
        block5b_drop = self.base_concat_model.get_layer("block5b_drop")(concat)
        block5b_add = self.base_concat_model.get_layer("block5b_add")([block5b_drop, block5a_project_bn])

        concat = self.base_concat_model.get_layer("block5c_expand_conv")(block5b_add)
        concat = self.base_concat_model.get_layer("block5c_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block5c_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block5c_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block5c_bn")(concat)
        block5c_activation = self.base_concat_model.get_layer("block5c_activation")(concat)
        concat = self.base_concat_model.get_layer("block5c_se_squeeze")(block5c_activation)
        concat = self.base_concat_model.get_layer("block5c_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block5c_se_reduce")(concat)
        block5c_se_expand = self.base_concat_model.get_layer("block5c_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block5c_se_excite")([block5c_activation, block5c_se_expand])
        concat = self.base_concat_model.get_layer("block5c_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block5c_project_bn")(concat)
        block5c_drop = self.base_concat_model.get_layer("block5c_drop")(concat)
        block5c_add = self.base_concat_model.get_layer("block5c_add")([block5c_drop, block5b_add])

        concat = self.base_concat_model.get_layer("block5d_expand_conv")(block5c_add)
        concat = self.base_concat_model.get_layer("block5d_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block5d_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block5d_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block5d_bn")(concat)
        block5d_activation = self.base_concat_model.get_layer("block5d_activation")(concat)
        concat = self.base_concat_model.get_layer("block5d_se_squeeze")(block5d_activation)
        concat = self.base_concat_model.get_layer("block5d_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block5d_se_reduce")(concat)
        block5d_se_expand = self.base_concat_model.get_layer("block5d_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block5d_se_excite")([block5d_activation, block5d_se_expand])
        concat = self.base_concat_model.get_layer("block5d_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block5d_project_bn")(concat)
        block5d_drop = self.base_concat_model.get_layer("block5d_drop")(concat)
        block5d_add = self.base_concat_model.get_layer("block5d_add")([block5d_drop, block5c_add])

        concat = self.base_concat_model.get_layer("block5e_expand_conv")(block5d_add)
        concat = self.base_concat_model.get_layer("block5e_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block5e_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block5e_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block5e_bn")(concat)
        block5e_activation = self.base_concat_model.get_layer("block5e_activation")(concat)
        concat = self.base_concat_model.get_layer("block5e_se_squeeze")(block5e_activation)
        concat = self.base_concat_model.get_layer("block5e_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block5e_se_reduce")(concat)
        block5e_se_expand = self.base_concat_model.get_layer("block5e_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block5e_se_excite")([block5e_activation, block5e_se_expand])
        concat = self.base_concat_model.get_layer("block5e_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block5e_project_bn")(concat)
        block5e_drop = self.base_concat_model.get_layer("block5e_drop")(concat)
        block5e_add = self.base_concat_model.get_layer("block5e_add")([block5e_drop, block5d_add])

        concat = self.base_concat_model.get_layer("block5f_expand_conv")(block5e_add)
        concat = self.base_concat_model.get_layer("block5f_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block5f_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block5f_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block5f_bn")(concat)
        block5f_activation = self.base_concat_model.get_layer("block5f_activation")(concat)
        concat = self.base_concat_model.get_layer("block5f_se_squeeze")(block5f_activation)
        concat = self.base_concat_model.get_layer("block5f_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block5f_se_reduce")(concat)
        block5f_se_expand = self.base_concat_model.get_layer("block5f_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block5f_se_excite")([block5f_activation, block5f_se_expand])
        concat = self.base_concat_model.get_layer("block5f_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block5f_project_bn")(concat)
        block5f_drop = self.base_concat_model.get_layer("block5f_drop")(concat)
        block5f_add = self.base_concat_model.get_layer("block5f_add")([block5f_drop, block5e_add])

        concat = self.base_concat_model.get_layer("block6a_expand_conv")(block5f_add)
        concat = self.base_concat_model.get_layer("block6a_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6a_expand_activation")(concat)

        concat = self.base_concat_model.get_layer("block6a_dwconv_pad")(concat)
        concat = self.base_concat_model.get_layer("block6a_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6a_bn")(concat)

        block6a_activation = self.base_concat_model.get_layer("block6a_activation")(concat)
        concat = self.base_concat_model.get_layer("block6a_se_squeeze")(block6a_activation)
        concat = self.base_concat_model.get_layer("block6a_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6a_se_reduce")(concat)
        block6a_se_expand = self.base_concat_model.get_layer("block6a_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6a_se_excite")([block6a_activation, block6a_se_expand])
        concat = self.base_concat_model.get_layer("block6a_project_conv")(concat)
        block6a_project_bn = self.base_concat_model.get_layer("block6a_project_bn")(concat)

        concat = self.base_concat_model.get_layer("block6b_expand_conv")(block6a_project_bn)
        concat = self.base_concat_model.get_layer("block6b_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6b_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6b_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6b_bn")(concat)
        block6b_activation = self.base_concat_model.get_layer("block6b_activation")(concat)
        concat = self.base_concat_model.get_layer("block6b_se_squeeze")(block6b_activation)
        concat = self.base_concat_model.get_layer("block6b_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6b_se_reduce")(concat)
        block6b_se_expand = self.base_concat_model.get_layer("block6b_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6b_se_excite")([block6b_activation, block6b_se_expand])
        concat = self.base_concat_model.get_layer("block6b_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6b_project_bn")(concat)
        block6b_drop = self.base_concat_model.get_layer("block6b_drop")(concat)
        block6b_add = self.base_concat_model.get_layer("block6b_add")([block6b_drop, block6a_project_bn])

        concat = self.base_concat_model.get_layer("block6c_expand_conv")(block6b_add)
        concat = self.base_concat_model.get_layer("block6c_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6c_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6c_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6c_bn")(concat)
        block6c_activation = self.base_concat_model.get_layer("block6c_activation")(concat)
        concat = self.base_concat_model.get_layer("block6c_se_squeeze")(block6c_activation)
        concat = self.base_concat_model.get_layer("block6c_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6c_se_reduce")(concat)
        block6c_se_expand = self.base_concat_model.get_layer("block6c_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6c_se_excite")([block6c_activation, block6c_se_expand])
        concat = self.base_concat_model.get_layer("block6c_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6c_project_bn")(concat)
        block6c_drop = self.base_concat_model.get_layer("block6c_drop")(concat)
        block6c_add = self.base_concat_model.get_layer("block6c_add")([block6c_drop, block6b_add])

        concat = self.base_concat_model.get_layer("block6d_expand_conv")(block6c_add)
        concat = self.base_concat_model.get_layer("block6d_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6d_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6d_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6d_bn")(concat)
        block6d_activation = self.base_concat_model.get_layer("block6d_activation")(concat)
        concat = self.base_concat_model.get_layer("block6d_se_squeeze")(block6d_activation)
        concat = self.base_concat_model.get_layer("block6d_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6d_se_reduce")(concat)
        block6d_se_expand = self.base_concat_model.get_layer("block6d_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6d_se_excite")([block6d_activation, block6d_se_expand])
        concat = self.base_concat_model.get_layer("block6d_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6d_project_bn")(concat)
        block6d_drop = self.base_concat_model.get_layer("block6d_drop")(concat)
        block6d_add = self.base_concat_model.get_layer("block6d_add")([block6d_drop, block6c_add])

        concat = self.base_concat_model.get_layer("block6e_expand_conv")(block6d_add)
        concat = self.base_concat_model.get_layer("block6e_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6e_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6e_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6e_bn")(concat)
        block6e_activation = self.base_concat_model.get_layer("block6e_activation")(concat)
        concat = self.base_concat_model.get_layer("block6e_se_squeeze")(block6e_activation)
        concat = self.base_concat_model.get_layer("block6e_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6e_se_reduce")(concat)
        block6e_se_expand = self.base_concat_model.get_layer("block6e_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6e_se_excite")([block6e_activation, block6e_se_expand])
        concat = self.base_concat_model.get_layer("block6e_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6e_project_bn")(concat)
        block6e_drop = self.base_concat_model.get_layer("block6e_drop")(concat)
        block6e_add = self.base_concat_model.get_layer("block6e_add")([block6e_drop, block6d_add])

        concat = self.base_concat_model.get_layer("block6f_expand_conv")(block6e_add)
        concat = self.base_concat_model.get_layer("block6f_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6f_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6f_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6f_bn")(concat)
        block6f_activation = self.base_concat_model.get_layer("block6f_activation")(concat)
        concat = self.base_concat_model.get_layer("block6f_se_squeeze")(block6f_activation)
        concat = self.base_concat_model.get_layer("block6f_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6f_se_reduce")(concat)
        block6f_se_expand = self.base_concat_model.get_layer("block6f_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6f_se_excite")([block6f_activation, block6f_se_expand])
        concat = self.base_concat_model.get_layer("block6f_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6f_project_bn")(concat)
        block6f_drop = self.base_concat_model.get_layer("block6f_drop")(concat)
        block6f_add = self.base_concat_model.get_layer("block6f_add")([block6f_drop, block6e_add])

        concat = self.base_concat_model.get_layer("block6g_expand_conv")(block6f_add)
        concat = self.base_concat_model.get_layer("block6g_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6g_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6g_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6g_bn")(concat)
        block6g_activation = self.base_concat_model.get_layer("block6g_activation")(concat)
        concat = self.base_concat_model.get_layer("block6g_se_squeeze")(block6g_activation)
        concat = self.base_concat_model.get_layer("block6g_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6g_se_reduce")(concat)
        block6g_se_expand = self.base_concat_model.get_layer("block6g_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6g_se_excite")([block6g_activation, block6g_se_expand])
        concat = self.base_concat_model.get_layer("block6g_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6g_project_bn")(concat)
        block6g_drop = self.base_concat_model.get_layer("block6g_drop")(concat)
        block6g_add = self.base_concat_model.get_layer("block6g_add")([block6g_drop, block6f_add])

        concat = self.base_concat_model.get_layer("block6h_expand_conv")(block6g_add)
        concat = self.base_concat_model.get_layer("block6h_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block6h_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block6h_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block6h_bn")(concat)
        block6h_activation = self.base_concat_model.get_layer("block6h_activation")(concat)
        concat = self.base_concat_model.get_layer("block6h_se_squeeze")(block6h_activation)
        concat = self.base_concat_model.get_layer("block6h_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block6h_se_reduce")(concat)
        block6h_se_expand = self.base_concat_model.get_layer("block6h_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block6h_se_excite")([block6h_activation, block6h_se_expand])
        concat = self.base_concat_model.get_layer("block6h_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block6h_project_bn")(concat)
        block6h_drop = self.base_concat_model.get_layer("block6h_drop")(concat)
        block6h_add = self.base_concat_model.get_layer("block6h_add")([block6h_drop, block6g_add])

        concat = self.base_concat_model.get_layer("block7a_expand_conv")(block6h_add)
        concat = self.base_concat_model.get_layer("block7a_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block7a_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block7a_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block7a_bn")(concat)
        block7a_activation = self.base_concat_model.get_layer("block7a_activation")(concat)
        concat = self.base_concat_model.get_layer("block7a_se_squeeze")(block7a_activation)
        concat = self.base_concat_model.get_layer("block7a_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block7a_se_reduce")(concat)
        block7a_se_expand = self.base_concat_model.get_layer("block7a_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block7a_se_excite")([block7a_activation, block7a_se_expand])
        concat = self.base_concat_model.get_layer("block7a_project_conv")(concat)
        block7a_project_bn = self.base_concat_model.get_layer("block7a_project_bn")(concat)

        concat = self.base_concat_model.get_layer("block7b_expand_conv")(block7a_project_bn)
        concat = self.base_concat_model.get_layer("block7b_expand_bn")(concat)
        concat = self.base_concat_model.get_layer("block7b_expand_activation")(concat)
        concat = self.base_concat_model.get_layer("block7b_dwconv")(concat)
        concat = self.base_concat_model.get_layer("block7b_bn")(concat)
        block7b_activation = self.base_concat_model.get_layer("block7b_activation")(concat)
        concat = self.base_concat_model.get_layer("block7b_se_squeeze")(block7b_activation)
        concat = self.base_concat_model.get_layer("block7b_se_reshape")(concat)
        concat = self.base_concat_model.get_layer("block7b_se_reduce")(concat)
        block7b_se_expand = self.base_concat_model.get_layer("block7b_se_expand")(concat)
        concat = self.base_concat_model.get_layer("block7b_se_excite")([block7b_activation, block7b_se_expand])
        concat = self.base_concat_model.get_layer("block7b_project_conv")(concat)
        concat = self.base_concat_model.get_layer("block7b_project_bn")(concat)
        block7b_drop = self.base_concat_model.get_layer("block7b_drop")(concat)
        block7b_add = self.base_concat_model.get_layer("block7b_add")([block7b_drop, block7a_project_bn])

        top_conv = self.base_concat_model.get_layer("top_conv")(block7b_add)
        top_bn = self.base_concat_model.get_layer("top_bn")(top_conv)
        top_activation = self.base_concat_model.get_layer("top_activation")(top_bn)

        global_average_pooling = keras.layers.GlobalAveragePooling2D()(top_activation)
        fc = keras.layers.Flatten()(global_average_pooling)
        fc = keras.layers.Dense((2048), name='fc_1')(fc)
        fc = keras.layers.Dropout(.5)(fc)
        fc = keras.layers.Dense((2048), name='fc_2')(fc)
        fc = keras.layers.Dropout(.5)(fc)
        outputs = keras.layers.Dense(7, activation="sigmoid", name="output")(fc)

        self.final_model = keras.Model([mels_input, mfcc_input], outputs)
        self.final_model.compile(optimizer=keras.optimizers.Adam(lr=self.lr), loss=keras.losses.CategoricalCrossentropy(), metrics=[keras.metrics.CategoricalCrossentropy()])
        print(self.final_model.summary())
        # plot_model(self.base_model_mels, to_file="mainmodel_ef4_plot.png", show_shapes=True, show_layer_names=True)







    def single_inference(self):
        pass

    def batch_inference(self):
        pass

if __name__ == '__main__':
    model = MainModel()
    model.build_model()
